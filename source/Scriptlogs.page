Menu="Dashboard:0"
Icon="ScriptLogsLogo.png"
---
<?php
require_once '/usr/local/emhttp/plugins/dynamix/include/Helpers.php';

// AJAX-Anfragen m端ssen ganz am Anfang behandelt werden, bevor irgendeine Ausgabe erfolgt.
if (isset($_GET['action']) && $_GET['action'] === 'getLogs') {
    header('Content-Type: application/json');
    $logFile = '/tmp/user.scripts/logs/in_progress';
    $logs = '';
    $fileExists = file_exists($logFile);
    if ($fileExists) {
        $lines = file($logFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
        if ($lines !== false) {
            $last_lines = array_slice($lines, -50);
            $logs = htmlspecialchars(implode("\n", $last_lines), ENT_QUOTES, 'UTF-8');
        } else {
            $logs = 'Fehler beim Lesen der Log-Datei.';
        }
    } else {
        $logs = 'Log-Datei nicht vorhanden.';
    }
    echo json_encode([
        'logs' => $logs,
        'lineCount' => substr_count($logs, "\n") + 1,
        'fileExists' => $fileExists
    ]);
    exit;
}


// PHP-Code zum initialen Laden der Logs f端r die Kachel
$logFile = '/tmp/user.scripts/logs/in_progress';
$initialLogs = '';
if (file_exists($logFile)) {
    $lines = file($logFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
    if ($lines !== false && count($lines) > 0) {
        $last_lines = array_slice($lines, -50);
        $initialLogs = htmlspecialchars(implode("\n", $last_lines), ENT_QUOTES, 'UTF-8');
    } else {
        $initialLogs = 'Log-Datei ist leer.';
    }
} else {
    $initialLogs = 'Log-Datei nicht vorhanden.';
}

// Alle dynamischen Werte in Variablen speichern
$initialLineCount = max(1, substr_count($initialLogs, "\n") + 1);
$timestamp = date('H:i:s');
$pluginname = "scriptlogs";

// Hier wird die Kachel f端r das Dashboard-System definiert
$mytiles[$pluginname]['column1'] = <<<EOT
<tbody id="db-scriptlogs" title="Script Logs">
    <tr>
        <td class="next" colspan="3">
            <i class="fa fa-terminal"></i>
            <div class="section">Script Logs<br>
                <span id="scriptlogs-status">Status: <span class="scriptlogs-entries">{$initialLineCount} Zeilen</span></span>
            </div>
            <i class="fa fa-fw chevron mt0" id="dash_scriptlogs_toggle" onclick="toggleChevron('dash_scriptlogs_toggle',0)"></i>
            <br><br>
        </td>
    </tr>
    <tr class="dash_scriptlogs_toggle scriptlogs-content">
        <td colspan="3">
            <div id="scriptlogs-container" style="height:200px; overflow-y:auto; font-family: monospace; font-size: 11px; background-color: #1a1a1a; color: #e0e0e0; padding: 8px; border: 1px solid #444; border-radius: 3px;">
                <pre id="scriptlogs-logs" style="margin: 0; white-space: pre-wrap; word-wrap: break-word;">{$initialLogs}</pre>
            </div>
            <div style="margin-top: 5px; font-size: 10px; color: #888; text-align: right;">
                Letztes Update: <span id="scriptlogs-timestamp">{$timestamp}</span>
            </div>
        </td>
    </tr>
</tbody>
EOT;
?>

<script type="text/javascript">
    $(function() {
        // Die Funktion ist bereits in scriptlogs.js definiert und wird automatisch geladen.
        // Wir m端ssen sie hier nur noch aufrufen.
        scriptlogs_status();
        setInterval(scriptlogs_status, 5000); // Auto-refresh alle 5 Sekunden
    });
</script>